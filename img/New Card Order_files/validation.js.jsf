function validateName(field,val){if($.trim(val).length<2){makeX(field);}else{makeCheck(field);}}
function validateRequired(field,val){if($.trim(val).length==0){makeX(field);}else{makeCheck(field);}}
function validateAnswer(field,val){if($.trim(val).length<2){makeX(field);}else{makeCheck(field);}}
function alphanumeric(val){var letterNumber=/^[0-9a-zA-Z]+$/;if(val.match(letterNumber))
return true;else
return false;}
function validateFirstAndLastName(field,val){if(($.trim(val).length==0)||(!alphanumeric(val))){makeX(field);}else{makeCheck(field);}}
function validatePassword(field,val){if($.trim(val).length<8||$.trim(val).length>30){makeX(field);}else{if(HasLowerCase(val)&&HasUpperCase(val)&&HasNumeral(val)){makeCheck(field);}else if(HasLowerCase(val)&&HasUpperCase(val)&&HasSpecialChars(val)){makeCheck(field);}else if(HasLowerCase(val)&&HasSpecialChars(val)&&HasNumeral(val)){makeCheck(field);}else if(HasUpperCase(val)&&HasSpecialChars(val)&&HasNumeral(val)){makeCheck(field);}else if(HasUpperCase(val)&&HasSpecialChars(val)&&HasNumeral(val)&&HasSpecialChars(val)){makeCheck(field);}else{makeX(field);}}}
function HasLowerCase(passwd)
{if(passwd.match(/[a-z]/))
return true;else
return false;}
function HasUpperCase(passwd)
{if(passwd.match(/[A-Z]/))
return true;else
return false;}
function HasNumeral(passwd)
{if(passwd.match(/[0-9]/))
return true;else
return false;}
function HasSpecialChars(passwd)
{if(passwd.match(/[!,@,#,$,%,^,&,*,?,_,~]/))
return true;else
return false;}
function validateExpireDate(field){var exDate=new Date($(field).prev().find("option:selected").val()+"/1/"+$(field).find("option:selected").val())
if(exDate<new Date())
makeX(field);else
makeCheck(field);}
function validateSecurity(field,val){if($.trim(val).length==3){makeCheck(field);}else{makeX(field);}}
function validateAddress(field,val){if($.trim(val).length<1){makeX(field);}else{makeCheck(field);}}
function validateCity(field,val){if($.trim(val).length<2){makeX(field);}else{makeCheck(field);}}
function validateZip(field,val){if($.trim(val).length>5){var regExpObj=/\d\d\d\d\d-\d\d\d\d/;if(regExpObj.exec(val)==null){makeX(field);}else{makeCheck(field);}}else if($.trim(val).length<=5){var regExpObj=/\d\d\d\d\d/;if(regExpObj.exec(val)==null){makeX(field);}else{makeCheck(field);}}}
function validateSerial(field,val){var resLength=$.trim(val).length;if(resLength>10){var regExpObj=/\d\d\d\d\d\d\d\d\d\d-\d/;if(regExpObj.exec(val)==null){makeX(field);}else{makeCheck(field);}}else if(resLength<=10){var regExpObj=/\d\d\d\d\d\d\d\d\d\d/;if(regExpObj.exec(val)==null){makeX(field);}else{makeCheck(field);}}}
function compareSerial(field,number,compare){var resLength=$.trim(number).length;if(resLength="")
makeX(field);else if(number==compare){validateSerial(field,number);}else{makeX(field);}}
function comparePassword(field,number,compare){if(number==compare&&$.trim(number).length>0){makeCheck(field);}else{makeX(field);}}
function validateAccountNumber(field,number){var pattern=/^((\d{16})|(X{12}\d{4}))?$/;if(pattern.test(number)&&number.length>0)
makeCheck(field);else
makeX(field);}
function validateDate(field,number){var pattern=/^\d\d?\/\d{2}$/;if(pattern.test(number)){var monthfield=number.split("/")[0];var yearfield=number.split("/")[1];var myDate=new Date();var currentYear=myDate.getFullYear();var currentMonth=myDate.getMonth();if(monthfield-1>=0&&monthfield-1<=11){if(yearfield>currentYear){makeCheck(field);}else
if(yearfield=currentYear&&monthfield-1>currentMonth){makeCheck(field);}else{makeX(field);}}else{makeX(field);}}else{makeX(field);}}
function validateChecking(field,number){var pattern=/^\d{4,20}$/;if(pattern.test(number)){makeCheck(field);}else{makeX(field);}}
function validateRouting(field,number){var pattern=/^\d{9}$/;if(pattern.test(number)){makeCheck(field);}else{makeX(field);}}
function checkdate(field,number){var validformat=/^\d{2}\/\d{2}\/\d{4}$/
var returnval=false
if(!validformat.test(number.value))
alert("Invalid Date Format. Please correct and submit again.")
else{var monthfield=number.value.split("/")[0]
var dayfield=number.value.split("/")[1]
var yearfield=number.value.split("/")[2]
var dayobj=new Date(yearfield,monthfield-1,dayfield)
if((dayobj.getMonth()+1!=monthfield)||(dayobj.getDate()!=dayfield)||(dayobj.getFullYear()!=yearfield))
alert("Invalid Day, Month, or Year range detected. Please correct and submit again.")
else
returnval=true}
if(returnval==false)number.select()
return returnval}
function validatePhone(primary){if(primary){if($("#mainForm\\:areaCode").val().length!=3||$("#mainForm\\:prefix").val().length!=3||$("#mainForm\\:extension").val().length!=4)
makeX($("#mainForm\\:areaCode"));else
makeCheck($("#mainForm\\:areaCode"));}
else{var area=$("#mainForm\\:areaCode2").val();var prefix=$("#mainForm\\:prefix2").val();var ext=$("#mainForm\\:extension2").val();if(area.length==0&&prefix.length==0&&ext.length==0){makeCheck($("#mainForm\\:areaCode2"));}
else{if(area.length!=3||prefix.length!=3||ext.length!=4)
makeX($("#mainForm\\:areaCode2"));else
makeCheck($("#mainForm\\:areaCode2"));}}}
function validateEmail(field,email){var reg=/^((?:(?:(?:\w[\.\-\+]?)*)\w)+)\@((?:(?:(?:\w[\.\-\+]?){0,62})\w)+)\.(\w{2,6})$/;if(reg.test(email)){makeCheck(field);return true;}else{makeX(field);return false;}}
function makeX(field){$(field).parent().next().addClass("boxX");$(field).parent().next().removeClass("boxCheck");$(field).parent().next().show();}
function makeCheck(field){$(field).parent().next().addClass("boxCheck");$(field).parent().next().removeClass("boxX");$(field).parent().next().show();}
function numbersonly(myfield,e,dec)
{var key;var keychar;if(window.event)
key=window.event.keyCode;else if(e)
key=e.which;else
return true;keychar=String.fromCharCode(key);if((key==null)||(key==0)||(key==8)||(key==9)||(key==13)||(key==27))
return true;else if((("0123456789").indexOf(keychar)>-1))
return true;else if(dec&&(keychar=="."))
{myfield.form.elements[dec].focus();return false;}
else
return false;}